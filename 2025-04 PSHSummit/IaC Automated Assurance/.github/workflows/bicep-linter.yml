on: 
  workflow_dispatch:
name: Bicep Linter

permissions:
  contents: read
  actions: read
  checks: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:

    # Checkout code
    - uses: actions/checkout@main

    - name: Check main.bicep
      shell: pwsh
      run: |
        Set-PSRepository PSGallery -InstallationPolicy Trusted
        Install-Module Pester -MinimumVersion 5.5.0
        Import-Module Pester -MinimumVersion 5.5.0
        Install-Module Bicep -MinimumVersion 2.8.0
        Install-Module Bicep -MinimumVersion 2.8.0
        $config = New-PesterConfiguration
        $config.TestResult.Enabled = $true
        $config.TestResult.OutputFormat = 'JUnitXml'
        $config.TestResult.OutputPath = 'main.bicep.xml'
        $config.Output.Verbosity = 'Detailed'
        $config.Run.Path = '.\PesterTests\Bicep.Test.ps1'
        Invoke-Pester -Configuration $config
        
    - name: Deployment Report
      uses: dorny/test-reporter@v1
      if: success() || failure()    # run this step even if previous step failed
      with:
        name: Bicep Tests
        path: '*.xml' 
        reporter: java-junit

    - name: Write JUnit results to summary
      if: success() || failure()    # run this step even if previous step failed
      shell: pwsh
      run: |
        [xml]$junit = Get-Content 'main.bicep.xml'
        $tests = $junit.testsuites
        $summary = @()
        $summary += "## üß™ Test Summary"
        $summary += ""
        $summary += "**Total:** $($tests.tests)  "
        $summary += "**Passed:** $($tests.tests - $tests.failures - $tests.errors - $tests.skipped)  "
        $summary += "**Failed:** $($tests.failures)  "
        $summary += "**Errors:** $($tests.errors)  "
        $summary += "**Skipped:** $($tests.skipped)"
        $summary += ""

        foreach ($case in $tests.testsuite.testcase) {
          $status = if ($case.failure) { "‚ùå Failed" } elseif ($case.skipped) { "‚ö†Ô∏è Skipped" } else { "‚úÖ Passed" }
          $summary += "$status - $($case.name)"
        }

        $summaryText = $summary -join "`n"
        $summaryText | Out-File -FilePath $env:GITHUB_STEP_SUMMARY -Encoding utf8 -Append
